rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Função para verificar se o usuário está autenticado
    function isAuthenticated() {
      return request.auth != null;
    }

    // Função para verificar se o usuário é admin
    function isAdmin() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.level == 3;
    }

    // Função para verificar se o usuário é o dono do documento
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Função para verificar se o usuário é participante da mensagem
    function isMessageParticipant() {
      return isAuthenticated() && (
        request.resource.data.participants.hasAny([request.auth.uid]) ||
        resource.data.participants.hasAny([request.auth.uid])
      );
    }

    // Regras para a coleção users
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && (isAdmin() || isOwner(userId));
      allow delete: if isAdmin();
    }

    // Regras para a coleção auth
    match /auth/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && (isAdmin() || isOwner(userId));
      allow delete: if isAdmin();
    }

    // Regras para a coleção messages
    match /messages/{messageId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated();
      allow delete: if isAdmin();
    }

    // Regras para a coleção posts
    match /posts/{postId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && (
        isAdmin() || 
        isOwner(resource.data.authorId) ||
        request.resource.data.diff(resource.data).affectedKeys()
          .hasOnly(['likes', 'comments'])
      );
      allow delete: if isAuthenticated() && (isAdmin() || isOwner(resource.data.authorId));
    }
  }
} 